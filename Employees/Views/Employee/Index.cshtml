@model List<Employees.Controllers.EmployeeSummaryViewModel>

<link rel="stylesheet" href="/css/Employee/style.css"/>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.0.0/dist/chart.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
 
<div class="d-flex flex-column align-items-center justify-content-center">

    @if (Model != null && Model.Any()) // Check if Model is not null and has elements
    {
        <h2 class="m-4">Employee List</h2>
        <table class="table table-bordered table-hover mb-4" style="width: 100%">
            <thead>
            <tr>
                <th style="width: 50%">Employee Name</th>
                <th style="width: 50%">Total Time Worked ( HOURS )</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var employee in Model)
            {
                <tr class="@(employee.TotalWorkTime < 100 ? "red-row" : "")">
                    <td>@(string.IsNullOrEmpty(employee.EmployeeName) ? "undefined" : employee.EmployeeName)</td>
                    <td>@employee.TotalWorkTime.ToString("F2")</td>
                </tr>
            }
            </tbody>
        </table>
    }
    else
    {
        <p>No employees found.</p>
    }

    <h2>Employee Pie Chart %</h2>
    
    <canvas id="employeePieChart" width="600" height="600"></canvas>


        
    <button onclick="saveAsPNG()" class="btn btn-primary m-5" style="width: 150px ; height: 50px ; font-size: 20px">Save as PNG</button>
</div>


<script>
    // Extract employee names and total work time percentages
    var labels = @Html.Raw(Json.Serialize(Model.Select(e => e.EmployeeName ?? "Undefined")));
    var hours = @Html.Raw(Json.Serialize(Model.Select(e => e.TotalWorkTime)));
    
        // RACUNAMO PROCENTE
        var totalHours = hours.reduce((acc, val) => acc + val, 0);
        var percentages = hours.map(hour => ((hour / totalHours) * 100).toFixed(2));

    // Get the canvas element
    var ctx = document.getElementById('employeePieChart').getContext('2d');
    
    Chart.register(ChartDataLabels);

    // Create the pie chart
    var pieChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: labels,
            datasets: [{
                data: percentages,
                backgroundColor: [
                    'red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet', 'brown', 'pink', 'gray', 'black',
                ],
            }],
        },
        options: {
            plugins: {
                          datalabels: {
                                formatter: (value) => {
                                    return value + '%';
                                },
                                color: '#fff',
                                offset: 50,
                            },
                        },
                responsive: false,
                }
               
    });
    
    function saveAsPNG() {
            var canvas = document.getElementById('employeePieChart');
                var dataURL = canvas.toDataURL('image/png');
                var link = document.createElement('a');
                link.href = dataURL;
                link.download = 'employee_pie_chart.png';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
        }
</script>